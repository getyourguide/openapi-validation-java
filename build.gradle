plugins {
    id 'java'
    alias(libs.plugins.nexus.publish)
}

ext['spring-framework.version'] = '6.2.10'
ext['tomcat.version'] = '11.0.10'

apply from: "${rootDir}/gradle/publish-root.gradle"

allprojects {
    group = 'com.getyourguide.openapi.validation'
    description = 'OpenAPI Validation library'
    version = '3.2.3'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(libs.versions.java.get())
        }
    }

    repositories {
        mavenCentral()
    }
}

subprojects {
    if(it.parent.name == 'examples') {
        apply plugin: 'java'
    } else {
        apply plugin: 'java-library'
        apply plugin: 'jacoco'

        dependencies {
            // Testing
            testImplementation(libs.junit.jupiter.api)
            testRuntimeOnly(libs.junit.jupiter.engine)
            testRuntimeOnly(libs.junit.platform.launcher)
            testImplementation(libs.mockito.core)
            testImplementation(libs.mockito.junit.jupiter)
        }

        jacoco {
            toolVersion = libs.versions.jacoco.get()
        }

        jacocoTestReport {
            reports {
                xml.required = true
                csv.required = false
                html.required = true
            }
        }

        test {
            useJUnitPlatform()
        }
    }

    apply plugin: 'checkstyle'
    apply plugin: 'pmd'

    dependencies {
        // Lombok annotations to reduce boilerplate code
        compileOnly(libs.lombok)
        annotationProcessor(libs.lombok)
        testCompileOnly(libs.lombok)
        testAnnotationProcessor(libs.lombok)

        // Security constraints
        constraints {
            implementation("org.springframework:spring-web:6.2.10") {
                because("versions below 6.2.8 have security vulnerabilities including CVE-2024-38820 - see dependabot #12")
            }
            implementation("org.springframework:spring-webmvc:6.2.10") {
                because("versions below 6.2.10 have Path Traversal Vulnerability CVE-2025-41242 - see dependabot #247")
            }
            implementation("org.apache.tomcat.embed:tomcat-embed-core:11.0.10") {
                because("versions below 10.1.42 have security vulnerabilities including CVE-2024-56337 - see dependabot #13")
            }
            implementation("org.apache.commons:commons-lang3:3.18.0") {
                because("versions below 3.18.0 have security vulnerabilities including CVE-2025-48924 - see dependabot #15")
            }
            implementation("io.projectreactor.netty:reactor-netty-http:1.2.9") {
                because("versions below 1.2.8 have security vulnerabilities including CVE-2025-22227 - see dependabot #16")
            }
            implementation("io.netty:netty-codec-http2:4.2.4.Final") {
                because("versions below 4.1.124.Final have security vulnerabilities including CVE-2025-55163 - see dependabot #17")
            }
        }
    }

    checkstyle {
        toolVersion = libs.versions.checkstyle.get()
        configDirectory.set(file("$rootProject.projectDir/config"))
        checkstyleMain.source = "src/main/java"
        checkstyleMain.exclude('**/build/generated/**')
        checkstyleTest.source = "src/main/java"
        checkstyleTest.exclude('**/build/generated/**')
    }

    pmd {
        toolVersion = libs.versions.pmd.get()
        consoleOutput = true
        ruleSets = ["$rootDir/ruleset.xml"]
    }
}
